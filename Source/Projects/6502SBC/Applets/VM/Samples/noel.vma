.CONST
    ZP.TOP0      0x12
    ZP.TOP2      0x14
    ZP.NEXT0     0x16
    ZP.NEXT2     0x18
    ZP.STR       0x1E
    Time.Millis  0x18
    Time.Seconds 0x19
    Long.Add     0x1A
    Long.Sub     0x1B
    Long.Print   0x1F
    Print.String 0x11
    
.DATA
    STR0 "Noel's RetroLab Benchmark\n"
    STR1 "."
    STR2 "\n"
    STR3 " ms\n"
    STR4 " seconds\n"

.MAIN
    ENTER
    
    ; Allocate locals:
    PUSHW 0              ; s low at [BP+0]
    PUSHW 0              ; s high at [BP-2]
    PUSHW 0              ; start low at [BP-4]
    PUSHW 0              ; start high at [BP-6]
    PUSHW 0              ; ss (seconds start) at [BP-8]
    PUSHW 0              ; i at [BP-10]
    PUSHW 0              ; j at [BP-12]
    
    ; start = millis()
    SYSCALL Time.Millis
    PUSHZW ZP.TOP0
    POPLW -4
    PUSHZW ZP.TOP2
    POPLW -6
    
    ; ss = seconds()
    SYSCALL Time.Seconds
    PUSHZW ZP.TOP0
    POPLW -8
    
    ; Print header
    PUSHD STR0
    POPZW ZP.STR
    SYSCALL Print.String
    
    ; for (i = 1; i <= 10; i++)
    PUSHW 1
    POPLW -10
    
outer_loop:
    ; s = 0
    PUSH0
    PUSH0
    POPLQ 0
    
    ; for (j = 1; j <= 1000; j++)
    PUSHW 1
    POPLW -12
    
inner_loop:
    ; s = s + j
    PUSHLQ 0
    POPZQ ZP.NEXT0
    
    PUSHLW -12
    PUSHW 0
    POPZQ ZP.TOP0
    
    SYSCALL Long.Add
    
    PUSHZQ ZP.NEXT0
    POPLQ 0
    
    ; j++
    INCLW -12
    
    ; j <= 1000?
    PUSHLW -12
    PUSHW 1000
    LE
    BNZB inner_loop
    
    ; Print dot
    PUSHD STR1
    POPZW ZP.STR
    SYSCALL Print.String
    
    ; i++
    INCLW -10
    
    ; i <= 10?
    PUSHLW -10
    PUSHW 10
    LE
    BNZB outer_loop
    
    ; Print newline and s
    PUSHD STR2
    POPZW ZP.STR
    SYSCALL Print.String
    
    PUSHLQ 0
    POPZQ ZP.TOP0
    SYSCALL Long.Print
    
    PUSHD STR2
    POPZW ZP.STR
    SYSCALL Print.String
    
    ; Print elapsed ms
    SYSCALL Time.Millis
    PUSHZQ ZP.TOP0
    POPZQ ZP.NEXT0
    
    PUSHLQ -4
    POPZQ ZP.TOP0
    SYSCALL Long.Sub
    
    PUSHZQ ZP.NEXT0
    POPZQ ZP.TOP0
    SYSCALL Long.Print
    
    PUSHD STR3
    POPZW ZP.STR
    SYSCALL Print.String
    
    ; Print elapsed seconds  
    SYSCALL Time.Seconds     ; Result in ZP.TOP (32-bit)
    
    ; Move current seconds to NEXT
    PUSHZQ ZP.TOP0
    POPZQ ZP.NEXT0
    
    ; Get saved start seconds to TOP
    PUSHLW -8               ; Low word of saved seconds
    PUSHW 0                 ; High word (was never saved, assume 0)
    POPZQ ZP.TOP0
    
    ; NEXT = NEXT - TOP (current - start)
    SYSCALL Long.Sub
    
    ; Move result to TOP for printing
    PUSHZQ ZP.NEXT0
    POPZQ ZP.TOP0
    
    SYSCALL Long.Print
    
    PUSHD STR4
    POPZW ZP.STR
    SYSCALL Print.String
    
    ; Clean up
    DROPW DROPW DROPW DROPW DROPW DROPW DROPW
    
    LEAVE
    HALT